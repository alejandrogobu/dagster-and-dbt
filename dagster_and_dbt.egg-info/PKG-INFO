Metadata-Version: 2.2
Name: dagster-and-dbt
Version: 0.1.0
Summary: Add your description here
Requires-Python: >=3.11
Description-Content-Type: text/markdown
Requires-Dist: dagster-cloud>=1.9.11
Requires-Dist: dagster>=1.9.11
Requires-Dist: dagster-duckdb>=0.25.11
Requires-Dist: dagster-dbt>=0.25.11
Requires-Dist: dbt-duckdb>=1.9.1
Requires-Dist: geopandas>=1.0.1
Requires-Dist: kaleido==0.2.1
Requires-Dist: pandas>=2.2.3
Requires-Dist: plotly>=6.0.0
Requires-Dist: shapely>=2.0.7
Requires-Dist: smart-open>=7.1.0
Requires-Dist: s3fs>=2025.2.0
Requires-Dist: boto3>=1.36.3
Requires-Dist: pyarrow>=19.0.0
Requires-Dist: dagster-webserver>=1.9.11
Requires-Dist: pytest>=8.3.4
Requires-Dist: matplotlib>=3.10.0

## Dagster University: Dagster + dbt

This is the **starter** version of the [Dagster](https://dagster.io/) project made to accompany Dagster University's [Dagster + dbt course](https://courses.dagster.io/courses/dagster-dbt).

> **Looking for the finished project for the Dagster + dbt course?** Use the [`module/dagster-and-dbt` branch](https://github.com/dagster-io/project-dagster-university/tree/module/dagster-and-dbt).

## Getting started

First, install your Dagster code location as a Python package. By using the --editable flag, pip will install your Python package in ["editable mode"](https://pip.pypa.io/en/latest/topics/local-project-installs/#editable-installs) so that as you develop, local code changes will automatically apply.

```bash
pip install -e ".[dev]"
```

Duplicate the `.env.example` file and rename it to `.env`. Then, fill in the values for the environment variables in the file.

Then, start the Dagster UI web server:

```bash
dagster dev
```

Open http://localhost:3000 with your browser to see the project.

## Development

### Adding new Python dependencies

You can specify new Python dependencies in `setup.py`.

### Unit testing

Tests are in the `dagster_university_tests` directory and you can run tests using `pytest`:

```bash
pytest dagster_university_tests
```

### Schedules and sensors

If you want to enable Dagster [Schedules](https://docs.dagster.io/concepts/partitions-schedules-sensors/schedules) or [Sensors](https://docs.dagster.io/concepts/partitions-schedules-sensors/sensors) for your jobs, the [Dagster Daemon](https://docs.dagster.io/deployment/dagster-daemon) process must be running. This is done automatically when you run `dagster dev`.

Once your Dagster Daemon is running, you can start turning on schedules and sensors for your jobs.

## Deploy on Dagster Cloud

The easiest way to deploy your Dagster project is to use Dagster Cloud.

Check out the [Dagster Cloud Documentation](https://docs.dagster.cloud) to learn more.
